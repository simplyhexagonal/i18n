var I18N=(()=>{var y=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var u=e=>a(e,"__esModule",{value:!0});var P=(e,t)=>{u(e);for(var i in t)a(e,i,{get:t[i],enumerable:!0})},M=(e,t,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of d(t))!R.call(e,n)&&n!=="default"&&a(e,n,{get:()=>t[n],enumerable:!(i=f(t,n))||i.enumerable});return e},l=e=>M(u(a(e!=null?y(x(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var N={};P(N,{default:()=>c});var h=l(require("fs")),r=l(require("i18next")),m=l(require("@simplyhexagonal/multi-replace"));const s=class{constructor(t,i){this._generateReplacer=t=>(i,n)=>t(n);this.t=null;this.matchers=[/__\(\s*['"`](.+?)['"`]\s*\)/g];this.replacer=(t,i)=>(console.log(`
    \u{1F7E1} I18N WARNING: replacer called but is not ready! Did you forget to await initPromise?
    `),i);this.i18next=r.default;this.changeLanguage=r.default.changeLanguage.bind(r.default);this.plugin={name:"i18n",setup(t){[[/\.tsx$/,"tsx"],[/\.ts$/,"ts"],[/\.jsx$/,"jsx"],[/\.js$/,"js"]].forEach(([n,o])=>{t.onLoad({filter:n},async p=>{await s.instance.initPromise;const g=h.default.readFileSync(p.path,"utf8");return{contents:s.instance.apply(g),loader:o}})})}};this.apply=t=>{const i=this.matchers.map(n=>[n,this.replacer]);return(0,m.multiReplaceSync)(t,i)};if(s.instance)return console.log(`
      \u{1F7E1} I18N WARNING: already initialized! Returning existing instance...
      `),s.instance;this.initPromise=r.default.use({type:"postProcessor",name:"warnMissingTranslation",process:(n,o,p,g)=>(n===o&&s.stringifyAndAlert(n),n)}).init(t).then(n=>(this.t=n,this.replacer=this._generateReplacer(n),n)),i&&(this.matchers=i),s.instance=this}};let c=s;c.stringifyAndAlert=t=>(console.log(`
    \u{1F7E1} Missing translation for: ${t}
    `),JSON.stringify(t));return N;})();
'undefined'!=typeof module&&(module.exports=I18N.default),'undefined'!=typeof window&&(I18N=I18N.default);